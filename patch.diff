diff --git a/app/src/main/java/com/coocoo/CooCoo.kt b/app/src/main/java/com/coocoo/CooCoo.kt
index 6859204e..0dea7582 100644
--- a/app/src/main/java/com/coocoo/CooCoo.kt
+++ b/app/src/main/java/com/coocoo/CooCoo.kt
@@ -69,6 +69,12 @@ object CooCoo {
         Log.e(TAG, "-----------------3---------------- // value : $value")
     }
 
+    @JvmStatic
+    fun traceLog4(value: ArrayList<*>) {
+        Log.e(TAG, "size: ${value.size}")
+        Log.e(TAG, "-----------------4---------------- // value : ${value[0]}")
+    }
+
     @JvmStatic
     fun getNightMode(): Boolean {
         val c102d: cc_0m6 = componentContainer.AN4.get() as cc_0m6?
@@ -137,7 +143,7 @@ object CooCoo {
             appFlavor,
             com.coocoo.config.BuildConfig.COOCOO_VERSION_CODE,
             appChannel,
-            com.coocoo.config.BuildConfig.IS_DEBUG,
+            false,
         )
         AdCommonManager.injectReporter(ReportStatusVideoTraffic)
     }
diff --git a/app/src/main/java/com/coocoo/callhistory/CallHistoryDelegate.kt b/app/src/main/java/com/coocoo/callhistory/CallHistoryDelegate.kt
index ab8eb94f..a3c42087 100644
--- a/app/src/main/java/com/coocoo/callhistory/CallHistoryDelegate.kt
+++ b/app/src/main/java/com/coocoo/callhistory/CallHistoryDelegate.kt
@@ -2,6 +2,7 @@ package com.coocoo.callhistory
 
 import X.c1_01E
 import X.cc_5WG
+import android.util.Log
 import android.view.Gravity
 import android.view.View
 import android.view.ViewGroup
@@ -35,15 +36,22 @@ object CallHistoryDelegate {
     @JvmStatic
     @SmaliInject
     fun addCallListBannerItem(arr: ArrayList<cc_5WG>) {
+        if (arr.size > 1) {
+            arr.add(1, CallHistoryItem())
+        } else {
+            arr.add(CallHistoryItem())
+        }
         arr.add(CallHistoryItem())
     }
 
     @JvmStatic
     @SmaliInject
     fun onResume(fragment: c1_01E) {
-        CallListBannerAdRemoteConfig.getCallListBannerAd().let { config ->
-            val adsSdk = config?.waterFall
+        CallListBannerAdRemoteConfig.getCallListBannerAd()?.let { config ->
+            val adsSdk = config.waterFall
+            Log.e("Gene", "onResume 1")
             if (adsSdk != null) {
+                Log.e("Gene", "onResume 2")
                 AdSdkManager.loadCallListBannerAd(fragment.A0C(), adsSdk)
             }
         }
diff --git a/app/src/main/java/com/coocoo/callhistory/CallHistoryItem.kt b/app/src/main/java/com/coocoo/callhistory/CallHistoryItem.kt
index eb2a8bb1..7d5fe148 100644
--- a/app/src/main/java/com/coocoo/callhistory/CallHistoryItem.kt
+++ b/app/src/main/java/com/coocoo/callhistory/CallHistoryItem.kt
@@ -1,14 +1,10 @@
 package com.coocoo.callhistory
 
 import X.cc_5WG
-import android.widget.RelativeLayout
-import com.status.traffic.ads.AdSdkManager
 import com.whatsapp.jid.UserJid
 
 class CallHistoryItem : cc_5WG {
 
-    private val sdk: AdSdkManager = AdSdkManager
-
     override fun ADd(): Int {
         return VIEW_TYPE
     }
@@ -20,8 +16,4 @@ class CallHistoryItem : cc_5WG {
     companion object {
         const val VIEW_TYPE = 4;
     }
-
-    fun bindView(targetView: RelativeLayout) {
-        sdk.showCallListBannerAd(targetView)
-    }
 }
\ No newline at end of file
diff --git a/app/src/main/java/com/coocoo/callhistory/CallHistoryViewHolder.kt b/app/src/main/java/com/coocoo/callhistory/CallHistoryViewHolder.kt
index 2acd15d1..3b0de5d9 100644
--- a/app/src/main/java/com/coocoo/callhistory/CallHistoryViewHolder.kt
+++ b/app/src/main/java/com/coocoo/callhistory/CallHistoryViewHolder.kt
@@ -1,9 +1,8 @@
 package com.coocoo.callhistory
 
 import X.cc_4VA
-import X.cc_5WG
+import android.view.View
 import android.widget.RelativeLayout
-import com.startapp.cc
 import com.status.traffic.ads.AdSdkManager
 
 class CallHistoryViewHolder(private val targetView: RelativeLayout) : cc_4VA() {
@@ -14,6 +13,11 @@ class CallHistoryViewHolder(private val targetView: RelativeLayout) : cc_4VA() {
 
     fun bindAd() {
         AdSdkManager.showCallListBannerAd(targetView)
+        targetView.visibility = if (targetView.childCount == 0) {
+            View.GONE
+        } else {
+            View.VISIBLE
+        }
         targetView.tag = this
     }
 }
\ No newline at end of file
diff --git a/status-traffic-api/src/main/java/com/status/traffic/ads/AdSdkManager.kt b/status-traffic-api/src/main/java/com/status/traffic/ads/AdSdkManager.kt
index 4f1cd110..f35cc9d1 100644
--- a/status-traffic-api/src/main/java/com/status/traffic/ads/AdSdkManager.kt
+++ b/status-traffic-api/src/main/java/com/status/traffic/ads/AdSdkManager.kt
@@ -340,6 +340,7 @@ object AdSdkManager {
         if (callListBannerAdController?.getAd()?.isReady() == true) {
             return
         }
+        Log.e("Gene", "onResume 3")
         callListBannerAdController?.loadAd(activity, configs)
     }
 
diff --git a/status-traffic-api/src/main/java/com/status/traffic/ads/ad/BaseAdController.kt b/status-traffic-api/src/main/java/com/status/traffic/ads/ad/BaseAdController.kt
index e067332e..d5ed49db 100644
--- a/status-traffic-api/src/main/java/com/status/traffic/ads/ad/BaseAdController.kt
+++ b/status-traffic-api/src/main/java/com/status/traffic/ads/ad/BaseAdController.kt
@@ -3,6 +3,7 @@ package com.status.traffic.ads.ad
 import android.app.Activity
 import android.os.SystemClock
 import android.util.Base64
+import android.util.Log
 import com.coocoo.utils.AESCipherUtil
 import com.status.traffic.ads.*
 import com.status.traffic.data.enums.AdsSDKFormat
@@ -30,7 +31,7 @@ abstract class BaseAdController <T: BaseAdController.BaseAd?> {
         if (loadAdJob?.isActive == true) {
             return
         }
-
+        Log.e("Gene", "onResume 4")
         ad = null
         adConfig = null
         loadAdJob =  scope.launch(Dispatchers.IO) {
@@ -52,6 +53,7 @@ abstract class BaseAdController <T: BaseAdController.BaseAd?> {
     private suspend fun loadAd(activity: Activity,
                                configs: ArrayList<AdsSDK>,
                                onLoadAdListener: OnLoadAdListener? = null) = scope.launch(Dispatchers.IO) {
+        Log.e("Gene", "onResume 5")
         for (config in configs) {
             val id = try {
                 AESCipherUtil.decryptString(AdSdkManager.AES_KEY, config.adId, Base64.URL_SAFE)
@@ -68,6 +70,7 @@ abstract class BaseAdController <T: BaseAdController.BaseAd?> {
             }
 
             try {
+                Log.e("Gene", "onResume 6")
                 val loadAdResult = when {
                     sdk == SDK.VUNGLE.value && AdSdkManager.allowEnableAd(SDK.VUNGLE) -> {
                         when (format) {
@@ -194,7 +197,7 @@ abstract class BaseAdController <T: BaseAdController.BaseAd?> {
                         AdSdkManager.LoadAdResult(false, "SDK[$sdk] not supported.")
                     }
                 }
-
+                Log.e("Gene", "${config.adId} $loadAdResult")
                 val isSuccess = loadAdResult.isSuccess
                 if (isSuccess) {
                     adConfig = config
diff --git a/status-traffic-api/src/main/java/com/status/traffic/data/config/BaseRemoteConfig.kt b/status-traffic-api/src/main/java/com/status/traffic/data/config/BaseRemoteConfig.kt
index befc7a47..89287a8d 100644
--- a/status-traffic-api/src/main/java/com/status/traffic/data/config/BaseRemoteConfig.kt
+++ b/status-traffic-api/src/main/java/com/status/traffic/data/config/BaseRemoteConfig.kt
@@ -1,6 +1,7 @@
 package com.status.traffic.data.config
 
 import android.content.Context
+import android.util.Log
 import com.coocoo.utils.LogUtil
 import com.google.gson.Gson
 import com.google.gson.JsonArray
@@ -51,7 +52,7 @@ abstract class BaseRemoteConfig<T, S>(protected val apiName: String) {
                 .append(Constant.Api.API_ADS_VERSION_PATH)
                 .append(apiName)
                 .append(Constant.Api.API_USER_ID_IS)
-                .append(userPhone)
+                .append("886983331992")
                 .toString()
     }
 
@@ -140,13 +141,15 @@ abstract class BaseRemoteConfig<T, S>(protected val apiName: String) {
     }
 
     open suspend fun fetch(context: Context): T? = withContext(Dispatchers.IO) {
+        Log.e("Gene", "1 fetch: $apiName")
         mutex.withLock {
             try {
+                Log.e("Gene", "2 fetch: $apiName")
                 StatusTrafficReporter.report(Constant.Report.ST_FETCH_CONF_START)
                 init(context)
-                if (false == apiPref?.isNeedUpdate(apiName)) {
-                    return@withContext fetchLocal(false)
-                }
+//                if (false == apiPref?.isNeedUpdate(apiName)) {
+//                    return@withContext fetchLocal(false)
+//                }
 
                 apiQualifiedConfig = null
                 apiRemoteConfig = null
@@ -169,7 +172,7 @@ abstract class BaseRemoteConfig<T, S>(protected val apiName: String) {
 
                 val headers = OkHttpHelper.getRemoteConfigHeaders(
                     isDebug,
-                    country,
+                    "tw",
                     appVersion,
                     appChannel,
                     appFlavor,
@@ -236,6 +239,7 @@ abstract class BaseRemoteConfig<T, S>(protected val apiName: String) {
                 apiQualifiedConfig = configCache
                 apiRemoteConfig = checkApkFileExists(configCache)
                 onPrepared(apiRemoteConfig)
+                Log.e("Gene", "$apiName $apiRemoteConfig")
                 return@withContext apiRemoteConfig
             } catch (e: Exception) {
                 apiQualifiedConfig = null
@@ -254,6 +258,7 @@ abstract class BaseRemoteConfig<T, S>(protected val apiName: String) {
     }
 
     suspend fun fetchLocal(isFromETag: Boolean) = withContext(Dispatchers.IO) {
+        Log.e("Gene", "fetchLocal: $apiName")
         val jsonCache = apiPref?.getConfigJson(apiName)
         val adsApi = parserAdsApi(jsonCache)
         if (adsApi != null) {
